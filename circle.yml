version: 2
executorType: docker
containerInfo:
  - image: ubuntu:14.04
    cmd: ["/bin/bash"] # specify if image does not already have Command set
  - image: jasonlaster11/mochitest-runner:latest
    cmd: ["/bin/bash"]
    env:
      - DISPLAY=unix$DISPLAY
      - SHELL=/bin/bash
stages:
  build:
    workDir: ~/debugger
    steps:
      - type: checkout

      # copy config
      - type: shell
        shell: /bin/bash
        command: cp configs/ci.json configs/local.json

      # install deps
      - type: shell
        shell: /bin/bash
        command: yarn

      # Run linting checks
      - type: shell
        shell: /bin/bash
        command: |
            set -exu
            yarn run lint-css
            yarn run lint-js
            yarn run lint-md

      # Run flow checks
      - type: shell
        shell: /bin/bash
        command: |
            set -exu
            yarn run flow
            yarn run flow-coverage -- -t json -o $CIRCLE_TEST_REPORTS/flow-coverage

      # Run flow checks
      - type: shell
        shell: /bin/bash
        command: |
            set -exu
            yarn check

      # Run tests
      - type: shell
        shell: /bin/bash
        command: |
            set -exu
            mkdir -p /tmp/test-results/mocha
            node src/test/node-unit-tests.js --ci
        environment:
          MOCHA_FILE: "/tmp/artifacts/mocha/test-results.xml"

      # run docker mochitests
      - type: shell
        shell: /bin/bash
        command: ./bin/run-mochitests-docker

      # Create flow coverage artifacts
      - type: shell
        shell: /bin/bash
        command: |
            set -exu
            mkdir -p /tmp/test-results/flow-coverage
            yarn run flow-coverage -- -t json -o /tmp/test-results/flow-coverage
            bash <(curl -s https://codecov.io/bash) -f /tmp/test-results/flow-coverage/flow-coverage.json

      # Save artifacts
      - type: artifacts-store
        path: /tmp/artifacts
        destination: build

      # Upload test results
      - type: test-results-store
        path: /tmp/test-results
