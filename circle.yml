version: 2
executorType: docker
containerInfo:
  - image: node:7
    cmd: ["/bin/bash"]
  - image: jasonlaster11/mochitest-runner:latest
    cmd: ["/bin/bash"]
    env:
      - DISPLAY=unix$DISPLAY
      - SHELL=/bin/bash
stages:
  build:
    workDir: ~/debugger
    steps:
      - type: checkout

      - type: shell
        name: Copy Config Files
        shell: /bin/bash --login
        command: cp configs/ci.json configs/local.json

      - type: shell
        name: Install Yarn
        shell: /bin/bash --login
        command: |
            apt-key adv --fetch-keys http://dl.yarnpkg.com/debian/pubkey.gpg
            echo "deb http://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
            apt-get update -qq
            apt-get install -y -qq yarn

      - type: shell
        name: Yarn Install
        shell: /bin/bash --login
        command: yarn

      - type: cache-save
        key: debugger-{{ .Branch }}-{{ checksum "yarn.lock" }}
        paths:
          - ~/.yarn-cache

      - type: shell
        name: Yarn Lint
        shell: /bin/bash --login
        command: |
            set -exu
            yarn run lint-css
            yarn run lint-js
            yarn run lint-md

      - type: shell
        name: Flow
        shell: /bin/bash --login
        command: |
            set -exu
            yarn run flow

      - type: shell
        name: Yarn Check yarn.lock
        shell: /bin/bash --login
        command: |
            set -exu
            yarn check

      # Run tests
      - type: shell
        name: Node Unit Tests
        shell: /bin/bash --login
        command: |
            set -exu
            mkdir -p /tmp/test-results/mocha
            node src/test/node-unit-tests.js --ci
        environment:
          MOCHA_FILE: "/tmp/artifacts/mocha/test-results.xml"

      # run docker mochitests
      - type: shell
        name: Docker Mochitests
        shell: /bin/bash --login
        command: ./bin/run-mochitests-docker

      # Create flow coverage artifacts
      - type: shell
        name: Flow Coverage Report
        shell: /bin/bash --login
        command: |
            set -exu
            mkdir -p /tmp/test-results/flow-coverage
            yarn run flow-coverage -- -t json -o /tmp/test-results/flow-coverage
            bash <(curl -s https://codecov.io/bash) -f /tmp/test-results/flow-coverage/flow-coverage.json

      # Save artifacts
      - type: artifacts-store
        path: /tmp/artifacts
        destination: build

      # Upload test results
      - type: test-results-store
        path: /tmp/test-results
