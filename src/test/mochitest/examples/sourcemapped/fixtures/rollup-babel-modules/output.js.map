{"version":3,"file":"output.js","sources":["src/mod1.js","src/mod2.js","src/mod3.js","src/mod4.js","src/mod5.js","src/mod6.js","src/mod7.js","src/mod9.js","src/mod10.js","src/mod11.js","src/mod12.js","src/optimized-out.js","input.js"],"sourcesContent":["export default \"a-default\";\n","export const aNamed = \"a-named\";\n","export const original = \"an-original\";\n","export default \"a-default\";\nexport const aNamed = \"a-named\";\n","export default \"a-default2\";\n","export const aNamed2 = \"a-named2\";\n","export const original = \"an-original2\";\n","export default \"a-default3\";\n","export const aNamed3 = \"a-named3\";\n","export const original = \"an-original3\";\n","export default \"a-default3\";\nexport const aNamed = \"a-named3\";\n","export default function optimizedOut() {\n  // Include enough logic to make Rollup not optimize the function out,\n  // since we want to test the _engine_'s logic for optimizing it out.\n  window.console;\n}\n","import aDefault from \"./src/mod1\";\nimport { aNamed, aNamed as anotherNamed } from \"./src/mod2\";\nimport { original as anAliased } from \"./src/mod3\";\nimport * as aNamespace from \"./src/mod4\";\n\nimport aDefault2 from \"./src/mod5\";\nimport { aNamed2, aNamed2 as anotherNamed2 } from \"./src/mod6\";\nimport { original as anAliased2 } from \"./src/mod7\";\n// import * as aNamespace2 from \"./src/mod8\";\n\nimport aDefault3 from \"./src/mod9\";\nimport { aNamed3, aNamed3 as anotherNamed3 } from \"./src/mod10\";\nimport { original as anAliased3 } from \"./src/mod11\";\nimport * as aNamespace3 from \"./src/mod12\";\n\nimport optimizedOut from \"./src/optimized-out\";\noptimizedOut();\n\nexport default function root() {\n  console.log(\"pause here\", root);\n\n  console.log(aDefault);\n  console.log(anAliased);\n  console.log(aNamed);\n  console.log(anotherNamed);\n  console.log(aNamespace);\n\n  try {\n    // None of these are callable in this code, but we still want to make sure\n    // they map properly even if the only reference is in a call expressions.\n    console.log(aDefault2());\n    console.log(anAliased2());\n    console.log(aNamed2());\n    console.log(anotherNamed2());\n    // console.log(aNamespace2()); // Rollup does not allow calling namespaces.\n\n    console.log(new aDefault3());\n    console.log(new anAliased3());\n    console.log(new aNamed3());\n    console.log(new anotherNamed3());\n    console.log(new aNamespace3());\n  } catch (e) {}\n}\n\nexport function example() {\n  // Stop rollup from optimizing this function out.\n  window.console;\n}\n"],"names":["aNamed","original","aNamed2","aNamed3","optimizedOut","window","console","root","log","aDefault","anAliased","anotherNamed","aNamespace","aDefault2","anAliased2","anotherNamed2","aDefault3","anAliased3","anotherNamed3","aNamespace3","e"],"mappings":";;;AAAA,iBAAe,WAAf;;ECAO,IAAMA,SAAS,SAAf;;ECAA,IAAMC,WAAW,aAAjB;;ACAP,aAAe,WAAf;AACA,EAAO,IAAMD,WAAS,SAAf;;;;;;;ACDP,kBAAe,YAAf;;ECAO,IAAME,UAAU,UAAhB;;ECAA,IAAMD,aAAW,cAAjB;;ACAP,kBAAe,YAAf;;ECAO,IAAME,UAAU,UAAhB;;ECAA,IAAMF,aAAW,cAAjB;;ACAP,cAAe,YAAf;AACA,EAAO,IAAMD,WAAS,UAAf;;;;;;;ECDQ,SAASI,YAAT,GAAwB;EACrC;EACA;EACAC,SAAOC,OAAP;EACD;;ECYDF;;AAEA,EAAe,SAASG,IAAT,GAAgB;EAC7BD,UAAQE,GAAR,CAAY,YAAZ,EAA0BD,IAA1B;;EAEAD,UAAQE,GAAR,CAAYC,QAAZ;EACAH,UAAQE,GAAR,CAAYE,QAAZ;EACAJ,UAAQE,GAAR,CAAYR,MAAZ;EACAM,UAAQE,GAAR,CAAYG,MAAZ;EACAL,UAAQE,GAAR,CAAYI,UAAZ;;EAEA,MAAI;EACF;EACA;EACAN,YAAQE,GAAR,CAAYK,WAAZ;EACAP,YAAQE,GAAR,CAAYM,YAAZ;EACAR,YAAQE,GAAR,CAAYN,SAAZ;EACAI,YAAQE,GAAR,CAAYO,SAAZ;EACA;;EAEAT,YAAQE,GAAR,CAAY,IAAIQ,SAAJ,EAAZ;EACAV,YAAQE,GAAR,CAAY,IAAIS,UAAJ,EAAZ;EACAX,YAAQE,GAAR,CAAY,IAAIL,OAAJ,EAAZ;EACAG,YAAQE,GAAR,CAAY,IAAIU,OAAJ,EAAZ;EACAZ,YAAQE,GAAR,CAAY,IAAIW,WAAJ,EAAZ;EACD,GAdD,CAcE,OAAOC,CAAP,EAAU;EACb;;;;;;;;"}