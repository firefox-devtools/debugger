{
  "globals": {
    "add_task": false,
    "Assert": false,
    "BrowserTestUtils": false,
    "content": false,
    "ContentTask": false,
    "ContentTaskUtils": false,
    "EventUtils": false,
    "executeSoon": false,
    "expectUncaughtException": false,
    "export_assertions": false,
    "extractJarToTmp": false,
    "finish": false,
    "getJar": false,
    "getRootDirectory": false,
    "getTestFilePath": false,
    "gBrowser": false,
    "gTestPath": false,
    "info": false,
    "is": false,
    "isnot": false,
    "ok": false,
    "registerCleanupFunction": false,
    "requestLongerTimeout": false,
    "SimpleTest": false,
    "SpecialPowers": false,
    "TestUtils": false,
    "todo": false,
    "todo_is": false,
    "todo_isnot": false,
    "waitForClipboard": false,
    "waitForExplicitFinish": false,
    "waitForFocus": false,

    // Globals introduced in debugger-specific head.js
    "promise": false,
    "BrowserToolboxProcess": false,
    "OS": false,
    "waitForNextDispatch": false,
    "waitForDispatch": false,
    "waitForThreadEvents": false,
    "waitForState": false,
    "waitForElement": false,
    "waitForPaused": false,
    "waitForSources": false,
    "isPaused": false,
    "assertPausedLocation": false,
    "assertHighlightLocation": false,
    "createDebuggerContext": false,
    "initDebugger": false,
    "invokeInTab": false,
    "findSource": false,
    "findElement": false,
    "findElementWithSelector": false,
    "findAllElements": false,
    "openNewTabAndToolbox": false,
    "selectSource": false,
    "stepOver": false,
    "stepIn": false,
    "stepOut": false,
    "resume": false,
    "reload": false,
    "navigate": false,
    "removeBreakpoint": false,
    "addBreakpoint": false,
    "toggleCallStack": false,
    "toggleScopes": false,
    "isVisibleWithin": false,
    "clickElement": false,
    "rightClickElement": false,
    "selectMenuItem": false,
    "togglePauseOnExceptions": false,
    "type": false,
    "pressKey": false,
    "EXAMPLE_URL": false,
    "waitUntil": false
  }
}
