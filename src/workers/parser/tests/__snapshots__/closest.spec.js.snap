// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`parser getClosestExpression Can find a local var 1`] = `
Object {
  "expression": "beta",
  "location": SourceLocation {
    "end": Position {
      "column": 23,
      "line": 15,
    },
    "identifierName": "beta",
    "start": Position {
      "column": 19,
      "line": 15,
    },
  },
}
`;

exports[`parser getClosestExpression member expressions Can find a member expression 1`] = `
Object {
  "expression": "obj.x",
  "location": SourceLocation {
    "end": Position {
      "column": 31,
      "line": 15,
    },
    "start": Position {
      "column": 26,
      "line": 15,
    },
  },
}
`;

exports[`parser getClosestExpression member expressions find a nested expression 1`] = `
Object {
  "expression": "obj2.c.secondProperty",
  "location": SourceLocation {
    "end": Position {
      "column": 33,
      "line": 2,
    },
    "start": Position {
      "column": 12,
      "line": 2,
    },
  },
}
`;

exports[`parser getClosestExpression member expressions finds an expression with a call 1`] = `
Object {
  "expression": undefined,
  "location": SourceLocation {
    "end": Position {
      "column": 0,
      "line": 28,
    },
    "start": Position {
      "column": 0,
      "line": 1,
    },
  },
}
`;

exports[`parser getClosestScope Can find the function declaration for square 1`] = `
FunctionDeclaration (1:0,3:1)
  async: false
  body: BlockStatement (1:19,3:1)
    body:
      - ReturnStatement (2:2,2:15)
          argument: BinaryExpression (2:9,2:14)
            left: Identifier (2:9,2:10)
              name: 'n'
            operator: '*'
            right: Identifier (2:13,2:14)
              name: 'n'
    directives: []
  expression: false
  generator: false
  id: Identifier (1:9,1:15)
    name: 'square'
  params:
    - Identifier (1:16,1:17)
        name: 'n'
`;

exports[`parser getClosestScope finds a scope given at the end 1`] = `
FunctionDeclaration (9:0,11:1)
  async: true
  body: BlockStatement (9:25,11:1)
    body:
      - ReturnStatement (10:2,10:15)
          argument: StringLiteral (10:9,10:14)
            extra:
              raw: '"meh"'
              rawValue: 'meh'
            value: 'meh'
    directives: []
  expression: false
  generator: false
  id: Identifier (9:15,9:22)
    name: 'slowFoo'
  params: []
`;

exports[`parser getClosestScope finds the scope at the beginning 1`] = `
FunctionDeclaration (5:7,7:1)
  async: false
  body: BlockStatement (5:24,7:1)
    body:
      - ReturnStatement (6:2,6:15)
          argument: StringLiteral (6:9,6:14)
            extra:
              raw: '"yay"'
              rawValue: 'yay'
            value: 'yay'
    directives: []
  expression: false
  generator: false
  id: Identifier (5:16,5:21)
    name: 'exFoo'
  params: []
`;
