// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SearchBar should render 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <Modal
    enabled={true}
    handleClose={[Function]}
    handleOpen={[Function]}
    shortcut="symbolSearch.search.key2"
>
    <div
        className="input-wrapper"
    >
        <SearchInput
            count={0}
            handleClose={[Function]}
            handleNext={[Function]}
            handlePrev={[Function]}
            onChange={[Function]}
            onKeyUp={[Function]}
            placeholder="Search functions…"
            query=""
            size=""
            summaryMsg={undefined}
        />
    </div>
</Modal>,
  "nodes": Array [
    <Modal
      enabled={true}
      handleClose={[Function]}
      handleOpen={[Function]}
      shortcut="symbolSearch.search.key2"
>
      <div
            className="input-wrapper"
      >
            <SearchInput
                  count={0}
                  handleClose={[Function]}
                  handleNext={[Function]}
                  handlePrev={[Function]}
                  onChange={[Function]}
                  onKeyUp={[Function]}
                  placeholder="Search functions…"
                  query=""
                  size=""
                  summaryMsg={undefined}
            />
      </div>
</Modal>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <SymbolModal
        enabled={true}
        selectedSource={
                Immutable.Map {
                }
        }
        setSelectedSymbolType={[Function]}
        symbolType="functions"
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": SymbolModal {
        "_reactInternalInstance": [Circular],
        "buildPlaceHolder": [Function],
        "buildSummaryMsg": [Function],
        "closeModal": [Function],
        "context": Object {
          "shortcuts": undefined,
        },
        "onChange": [Function],
        "onClick": [Function],
        "onKeyUp": [Function],
        "openSymbolModal": [Function],
        "props": Object {
          "enabled": true,
          "selectedSource": Immutable.Map {
},
          "setSelectedSymbolType": [Function],
          "symbolType": "functions",
        },
        "refs": Object {},
        "renderResults": [Function],
        "selectResultItem": [Function],
        "state": Object {
          "query": "",
          "results": null,
          "resultsIndex": 0,
        },
        "traverseResults": [Function],
        "updateResults": [Function],
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": Object {
        "_currentElement": <Modal
          enabled={true}
          handleClose={[Function]}
          handleOpen={[Function]}
          shortcut="symbolSearch.search.key2"
>
          <div
                    className="input-wrapper"
          >
                    <SearchInput
                              count={0}
                              handleClose={[Function]}
                              handleNext={[Function]}
                              handlePrev={[Function]}
                              onChange={[Function]}
                              onKeyUp={[Function]}
                              placeholder="Search functions…"
                              query=""
                              size=""
                              summaryMsg={undefined}
                    />
          </div>
</Modal>,
        "_debugID": 2,
        "_renderedOutput": <Modal
          enabled={true}
          handleClose={[Function]}
          handleOpen={[Function]}
          shortcut="symbolSearch.search.key2"
>
          <div
                    className="input-wrapper"
          >
                    <SearchInput
                              count={0}
                              handleClose={[Function]}
                              handleNext={[Function]}
                              handlePrev={[Function]}
                              onChange={[Function]}
                              onKeyUp={[Function]}
                              placeholder="Search functions…"
                              query=""
                              size=""
                              summaryMsg={undefined}
                    />
          </div>
</Modal>,
      },
      "_renderedNodeType": 1,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <SymbolModal
    enabled={true}
    selectedSource={
        Immutable.Map {
        }
    }
    setSelectedSymbolType={[Function]}
    symbolType="functions"
/>,
}
`;
