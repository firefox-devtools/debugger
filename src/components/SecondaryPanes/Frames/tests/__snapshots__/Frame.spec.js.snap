// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Frame getFrameTitle 1`] = `
<div
  className="frame"
  key="1"
  onContextMenu={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  role="listitem"
  tabIndex={0}
  title="Jump to https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.com/assets/src/js/foo-view.js:10"
>
  <FrameIndent />
  <FrameTitle
    frame={
      Object {
        "displayName": "renderFoo",
        "generatedLocation": Object {
          "line": 10,
          "sourceId": "source",
        },
        "id": "1",
        "location": Object {
          "line": 10,
          "sourceId": "source",
        },
        "scope": Object {
          "actor": "scope-actor",
          "bindings": Object {
            "arguments": Array [],
            "variables": Object {},
          },
          "function": null,
          "object": null,
          "parent": null,
          "type": "block",
        },
        "source": Object {
          "contentType": "text/javascript",
          "id": "source",
          "introductionUrl": null,
          "isBlackBoxed": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "loadedState": "unloaded",
          "relativeUrl": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.com/assets/src/js/foo-view.js",
          "text": "",
          "url": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.com/assets/src/js/foo-view.js",
        },
        "this": Object {},
        "thread": "FakeThread",
      }
    }
    options={
      Object {
        "shouldMapDisplayName": true,
      }
    }
  />
  <span
    className="clipboard-only"
  >
     
  </span>
  <FrameLocation
    displayFullUrl={false}
    frame={
      Object {
        "displayName": "renderFoo",
        "generatedLocation": Object {
          "line": 10,
          "sourceId": "source",
        },
        "id": "1",
        "location": Object {
          "line": 10,
          "sourceId": "source",
        },
        "scope": Object {
          "actor": "scope-actor",
          "bindings": Object {
            "arguments": Array [],
            "variables": Object {},
          },
          "function": null,
          "object": null,
          "parent": null,
          "type": "block",
        },
        "source": Object {
          "contentType": "text/javascript",
          "id": "source",
          "introductionUrl": null,
          "isBlackBoxed": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "loadedState": "unloaded",
          "relativeUrl": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.com/assets/src/js/foo-view.js",
          "text": "",
          "url": "https://aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa.com/assets/src/js/foo-view.js",
        },
        "this": Object {},
        "thread": "FakeThread",
      }
    }
  />
  <br
    className="clipboard-only"
  />
</div>
`;

exports[`Frame library frame 1`] = `
<div
  className="frame selected"
  key="3"
  onContextMenu={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  role="listitem"
  tabIndex={0}
>
  <FrameIndent />
  <FrameTitle
    frame={
      Object {
        "displayName": "updateEvents",
        "generatedLocation": Object {
          "line": 12,
          "sourceId": "source",
        },
        "id": "3",
        "library": "backbone",
        "location": Object {
          "line": 12,
          "sourceId": "source",
        },
        "scope": Object {
          "actor": "scope-actor",
          "bindings": Object {
            "arguments": Array [],
            "variables": Object {},
          },
          "function": null,
          "object": null,
          "parent": null,
          "type": "block",
        },
        "source": Object {
          "contentType": "text/javascript",
          "id": "source",
          "introductionUrl": null,
          "isBlackBoxed": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "loadedState": "unloaded",
          "relativeUrl": "backbone.js",
          "text": "",
          "url": "backbone.js",
        },
        "this": Object {},
        "thread": "FakeThread",
      }
    }
    options={
      Object {
        "shouldMapDisplayName": true,
      }
    }
  />
  <span
    className="clipboard-only"
  >
     
  </span>
  <FrameLocation
    displayFullUrl={false}
    frame={
      Object {
        "displayName": "updateEvents",
        "generatedLocation": Object {
          "line": 12,
          "sourceId": "source",
        },
        "id": "3",
        "library": "backbone",
        "location": Object {
          "line": 12,
          "sourceId": "source",
        },
        "scope": Object {
          "actor": "scope-actor",
          "bindings": Object {
            "arguments": Array [],
            "variables": Object {},
          },
          "function": null,
          "object": null,
          "parent": null,
          "type": "block",
        },
        "source": Object {
          "contentType": "text/javascript",
          "id": "source",
          "introductionUrl": null,
          "isBlackBoxed": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "loadedState": "unloaded",
          "relativeUrl": "backbone.js",
          "text": "",
          "url": "backbone.js",
        },
        "this": Object {},
        "thread": "FakeThread",
      }
    }
  />
  <br
    className="clipboard-only"
  />
</div>
`;

exports[`Frame user frame (not selected) 1`] = `
<div
  className="frame"
  key="1"
  onContextMenu={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  role="listitem"
  tabIndex={0}
>
  <FrameIndent />
  <FrameTitle
    frame={
      Object {
        "displayName": "renderFoo",
        "generatedLocation": Object {
          "line": 10,
          "sourceId": "source",
        },
        "id": "1",
        "location": Object {
          "line": 10,
          "sourceId": "source",
        },
        "scope": Object {
          "actor": "scope-actor",
          "bindings": Object {
            "arguments": Array [],
            "variables": Object {},
          },
          "function": null,
          "object": null,
          "parent": null,
          "type": "block",
        },
        "source": Object {
          "contentType": "text/javascript",
          "id": "source",
          "introductionUrl": null,
          "isBlackBoxed": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "loadedState": "unloaded",
          "relativeUrl": "foo-view.js",
          "text": "",
          "url": "foo-view.js",
        },
        "this": Object {},
        "thread": "FakeThread",
      }
    }
    options={
      Object {
        "shouldMapDisplayName": true,
      }
    }
  />
  <span
    className="clipboard-only"
  >
     
  </span>
  <FrameLocation
    displayFullUrl={false}
    frame={
      Object {
        "displayName": "renderFoo",
        "generatedLocation": Object {
          "line": 10,
          "sourceId": "source",
        },
        "id": "1",
        "location": Object {
          "line": 10,
          "sourceId": "source",
        },
        "scope": Object {
          "actor": "scope-actor",
          "bindings": Object {
            "arguments": Array [],
            "variables": Object {},
          },
          "function": null,
          "object": null,
          "parent": null,
          "type": "block",
        },
        "source": Object {
          "contentType": "text/javascript",
          "id": "source",
          "introductionUrl": null,
          "isBlackBoxed": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "loadedState": "unloaded",
          "relativeUrl": "foo-view.js",
          "text": "",
          "url": "foo-view.js",
        },
        "this": Object {},
        "thread": "FakeThread",
      }
    }
  />
  <br
    className="clipboard-only"
  />
</div>
`;

exports[`Frame user frame 1`] = `
<div
  className="frame selected"
  key="1"
  onContextMenu={[Function]}
  onKeyUp={[Function]}
  onMouseDown={[Function]}
  role="listitem"
  tabIndex={0}
>
  <FrameIndent />
  <FrameTitle
    frame={
      Object {
        "displayName": "renderFoo",
        "generatedLocation": Object {
          "line": 10,
          "sourceId": "source",
        },
        "id": "1",
        "location": Object {
          "line": 10,
          "sourceId": "source",
        },
        "scope": Object {
          "actor": "scope-actor",
          "bindings": Object {
            "arguments": Array [],
            "variables": Object {},
          },
          "function": null,
          "object": null,
          "parent": null,
          "type": "block",
        },
        "source": Object {
          "contentType": "text/javascript",
          "id": "source",
          "introductionUrl": null,
          "isBlackBoxed": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "loadedState": "unloaded",
          "relativeUrl": "foo-view.js",
          "text": "",
          "url": "foo-view.js",
        },
        "this": Object {},
        "thread": "FakeThread",
      }
    }
    options={
      Object {
        "shouldMapDisplayName": true,
      }
    }
  />
  <span
    className="clipboard-only"
  >
     
  </span>
  <FrameLocation
    displayFullUrl={false}
    frame={
      Object {
        "displayName": "renderFoo",
        "generatedLocation": Object {
          "line": 10,
          "sourceId": "source",
        },
        "id": "1",
        "location": Object {
          "line": 10,
          "sourceId": "source",
        },
        "scope": Object {
          "actor": "scope-actor",
          "bindings": Object {
            "arguments": Array [],
            "variables": Object {},
          },
          "function": null,
          "object": null,
          "parent": null,
          "type": "block",
        },
        "source": Object {
          "contentType": "text/javascript",
          "id": "source",
          "introductionUrl": null,
          "isBlackBoxed": false,
          "isPrettyPrinted": false,
          "isWasm": false,
          "loadedState": "unloaded",
          "relativeUrl": "foo-view.js",
          "text": "",
          "url": "foo-view.js",
        },
        "this": Object {},
        "thread": "FakeThread",
      }
    }
  />
  <br
    className="clipboard-only"
  />
</div>
`;
