// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Parser.getSymbols allSymbols 1`] = `
"properties

member expressions
[(20, 4), (20, 12)] [(20, 0), (20, 12)] Obj.property property 
[(21, 4), (21, 17)] [(21, 0), (21, 17)] Obj.otherProperty otherProperty 
identifiers
[(1, 6), (1, 15)]  TIME TIME 
[(1, 6), (1, 10)]  TIME TIME 
[(2, 4), (2, 13)]  count count 
[(2, 4), (2, 9)]  count count 
[(4, 9), (4, 25)]  incrementCounter incrementCounter 
[(4, 26), (4, 33)]  counter counter 
[(5, 9), (5, 16)]  counter counter 
[(8, 6), (8, 27)]  sum sum 
[(8, 6), (8, 9)]  sum sum 
[(8, 13), (8, 14)]  a a 
[(8, 16), (8, 17)]  b b 
[(8, 22), (8, 23)]  a a 
[(8, 26), (8, 27)]  b b 
[(10, 6), (18, 1)]  Obj Obj 
[(10, 6), (10, 9)]  Obj Obj 
[(20, 0), (20, 3)]  Obj Obj 
[(20, 4), (20, 12)]  property property 
[(21, 0), (21, 3)]  Obj Obj 
[(21, 4), (21, 17)]  otherProperty otherProperty 
[(23, 6), (23, 11)]  Ultra Ultra 
variables
[(1, 6), (1, 15)]   TIME 
[(2, 4), (2, 13)]   count 
[(4, 26), (4, 33)]   counter 
[(8, 6), (8, 27)]   sum 
[(8, 13), (8, 14)]   a 
[(8, 16), (8, 17)]   b 
[(10, 6), (18, 1)]   Obj 
[(23, 0), (31, 1)]   Ultra "
`;

exports[`Parser.getSymbols class 1`] = `
"properties

member expressions

identifiers
[(1, 6), (1, 10)]  Test Test 
[(11, 6), (11, 11)]  Test2 Test2 
[(13, 4), (13, 30)]  expressiveClass expressiveClass 
[(13, 4), (13, 19)]  expressiveClass expressiveClass 
variables
[(1, 0), (9, 1)]   Test 
[(11, 0), (11, 14)]   Test2 
[(13, 4), (13, 30)]   expressiveClass "
`;

exports[`Parser.getSymbols expression 1`] = `
"properties

member expressions
[(2, 19), (2, 33)] [(2, 12), (2, 33)] obj2.c.secondProperty secondProperty 
[(2, 17), (2, 18)] [(2, 12), (2, 18)] obj2.c c 
[(7, 4), (7, 12)] [(7, 0), (7, 12)] app.TodoView TodoView 
[(7, 24), (7, 30)] [(7, 15), (7, 30)] Backbone.extend extend 
[(12, 4), (12, 7)] [(12, 0), (12, 7)] obj.foo foo 
[(27, 29), (27, 43)] [(27, 13), (27, 43)]  secondProperty 
[(27, 27), (27, 28)] [(27, 13), (27, 28)]  c 
[(27, 18), (27, 24)] [(27, 13), (27, 24)] obj2.doEvil doEvil 
identifiers
[(1, 6), (1, 27)]  obj obj 
[(1, 6), (1, 9)]  obj obj 
[(2, 6), (2, 33)]  foo foo 
[(2, 6), (2, 9)]  foo foo 
[(2, 12), (2, 16)]  obj2 obj2 
[(2, 17), (2, 18)]  c c 
[(2, 19), (2, 33)]  secondProperty secondProperty 
[(5, 6), (5, 49)]  com com 
[(5, 6), (5, 9)]  com com 
[(7, 0), (7, 3)]  app app 
[(7, 4), (7, 12)]  TodoView TodoView 
[(7, 15), (7, 23)]  Backbone Backbone 
[(7, 24), (7, 30)]  extend extend 
[(12, 0), (12, 3)]  obj obj 
[(12, 4), (12, 7)]  foo foo 
[(13, 0), (13, 3)]  com com 
[(16, 6), (16, 32)]  res res 
[(16, 6), (16, 9)]  res res 
[(17, 6), (17, 30)]  res2 res2 
[(17, 6), (17, 10)]  res2 res2 
[(18, 6), (18, 45)]  res3 res3 
[(18, 6), (18, 10)]  res3 res3 
[(19, 6), (19, 45)]  res4 res4 
[(19, 6), (19, 10)]  res4 res4 
[(22, 6), (22, 35)]   undefined 
[(22, 21), (22, 28)]  compute compute 
[(22, 29), (22, 34)]  stuff stuff 
[(23, 6), (23, 35)]   undefined 
[(23, 7), (23, 8)]  a a 
[(23, 13), (23, 17)]  rest rest 
[(23, 21), (23, 28)]  compute compute 
[(23, 29), (23, 34)]  stuff stuff 
[(25, 9), (25, 15)]  params params 
[(26, 4), (26, 32)]  pars pars 
[(26, 4), (26, 8)]  pars pars 
[(27, 6), (27, 43)]  evil evil 
[(27, 6), (27, 10)]  evil evil 
[(27, 13), (27, 17)]  obj2 obj2 
[(27, 18), (27, 24)]  doEvil doEvil 
[(27, 27), (27, 28)]  c c 
[(27, 29), (27, 43)]  secondProperty secondProperty 
variables
[(1, 6), (1, 27)]   obj 
[(2, 6), (2, 33)]   foo 
[(5, 6), (5, 49)]   com 
[(16, 6), (16, 32)]   res 
[(17, 6), (17, 30)]   res2 
[(18, 6), (18, 45)]   res3 
[(19, 6), (19, 45)]   res4 
[(22, 6), (22, 35)]   undefined 
[(23, 6), (23, 35)]   undefined 
[(25, 16), (25, 24)]   undefined 
[(26, 4), (26, 32)]   pars 
[(26, 20), (26, 28)]   undefined 
[(27, 6), (27, 43)]   evil "
`;

exports[`Parser.getSymbols finds symbols in an html file 1`] = `
"properties

member expressions
[(23, 18), (23, 29)] [(23, 10), (23, 29)] name.undefined.toUpperCase toUpperCase 
[(23, 15), (23, 16)] [(23, 10), (23, 17)] name. undefined 
[(23, 39), (23, 48)] [(23, 34), (23, 48)] name.substring substring 
[(28, 4), (28, 8)] [(25, 19), (28, 8)]  join 
[(27, 4), (27, 7)] [(25, 19), (27, 7)]  map 
[(26, 4), (26, 7)] [(25, 19), (26, 7)] map map 
[(30, 15), (30, 24)] [(30, 2), (30, 24)] globalObject.greetings greetings 
[(38, 11), (38, 14)] [(38, 3), (38, 14)] console.log log 
identifiers
[(4, 6), (7, 3)]  globalObject globalObject 
[(4, 6), (4, 18)]  globalObject globalObject 
[(8, 11), (8, 19)]  sayHello sayHello 
[(8, 21), (8, 25)]  name name 
[(9, 20), (9, 24)]  name name 
[(22, 8), (24, 3)]  capitalize capitalize 
[(22, 8), (22, 18)]  capitalize capitalize 
[(22, 21), (22, 25)]  name name 
[(23, 10), (23, 14)]  name name 
[(23, 18), (23, 29)]  toUpperCase toUpperCase 
[(23, 34), (23, 38)]  name name 
[(23, 39), (23, 48)]  substring substring 
[(25, 8), (28, 14)]  greetAll greetAll 
[(25, 8), (25, 16)]  greetAll greetAll 
[(26, 4), (26, 7)]  map map 
[(26, 8), (26, 18)]  capitalize capitalize 
[(27, 4), (27, 7)]  map map 
[(27, 8), (27, 16)]  sayHello sayHello 
[(28, 4), (28, 8)]  join join 
[(30, 2), (30, 14)]  globalObject globalObject 
[(30, 15), (30, 24)]  greetings greetings 
[(30, 27), (30, 35)]  greetAll greetAll 
[(36, 12), (36, 16)]  iife iife 
[(37, 9), (37, 36)]  greeting greeting 
[(37, 9), (37, 17)]  greeting greeting 
[(37, 20), (37, 28)]  sayHello sayHello 
[(38, 3), (38, 10)]  console console 
[(38, 11), (38, 14)]  log log 
[(38, 15), (38, 23)]  greeting greeting 
variables
[(4, 6), (7, 3)]   globalObject 
[(8, 21), (8, 25)]   name 
[(22, 8), (24, 3)]   capitalize 
[(22, 21), (22, 25)]   name 
[(25, 8), (28, 14)]   greetAll 
[(37, 9), (37, 36)]   greeting "
`;

exports[`Parser.getSymbols func 1`] = `
"properties

member expressions

identifiers
[(1, 9), (1, 15)]  square square 
[(1, 16), (1, 17)]  n n 
[(2, 9), (2, 10)]  n n 
[(2, 13), (2, 14)]  n n 
[(5, 0), (5, 5)]  child child 
variables
[(1, 16), (1, 17)]   n "
`;

exports[`Parser.getSymbols math 1`] = `
"properties

member expressions

identifiers
[(1, 9), (1, 13)]  math math 
[(1, 14), (1, 15)]  n n 
[(2, 11), (2, 17)]  square square 
[(2, 18), (2, 19)]  n n 
[(3, 4), (3, 5)]  n n 
[(3, 8), (3, 9)]  n n 
[(5, 8), (5, 23)]  two two 
[(5, 8), (5, 11)]  two two 
[(5, 14), (5, 20)]  square square 
[(6, 8), (6, 25)]  four four 
[(6, 8), (6, 12)]  four four 
[(6, 15), (6, 22)]  squaare squaare 
[(7, 9), (7, 12)]  two two 
[(7, 15), (7, 19)]  four four 
[(10, 4), (10, 25)]  child child 
[(10, 4), (10, 9)]  child child 
[(11, 0), (11, 6)]  child2 child2 
variables
[(1, 14), (1, 15)]   n 
[(2, 18), (2, 19)]   n 
[(5, 8), (5, 23)]   two 
[(6, 8), (6, 25)]   four 
[(10, 4), (10, 25)]   child "
`;

exports[`Parser.getSymbols proto 1`] = `
"properties

member expressions
[(5, 31), (5, 37)] [(5, 17), (5, 37)] Backbone.View.extend extend 
[(5, 26), (5, 30)] [(5, 17), (5, 30)] Backbone.View View 
identifiers
[(1, 6), (1, 25)]  foo foo 
[(1, 6), (1, 9)]  foo foo 
[(3, 6), (3, 20)]  bar bar 
[(3, 6), (3, 9)]  bar bar 
[(5, 6), (14, 2)]  TodoView TodoView 
[(5, 6), (5, 14)]  TodoView TodoView 
[(5, 17), (5, 25)]  Backbone Backbone 
[(5, 26), (5, 30)]  View View 
[(5, 31), (5, 37)]  extend extend 
variables
[(1, 6), (1, 25)]   foo 
[(3, 6), (3, 20)]   bar 
[(5, 6), (14, 2)]   TodoView "
`;

exports[`Parser.getSymbols var 1`] = `
"properties

member expressions

identifiers
[(1, 4), (1, 11)]  foo foo 
[(1, 4), (1, 7)]  foo foo 
[(2, 4), (2, 11)]  bar bar 
[(2, 4), (2, 7)]  bar bar 
[(3, 6), (3, 13)]  baz baz 
[(3, 6), (3, 9)]  baz baz 
[(4, 6), (4, 11)]  a a 
[(4, 6), (4, 7)]  a a 
[(5, 2), (5, 7)]  b b 
[(5, 2), (5, 3)]  b b 
variables
[(1, 4), (1, 11)]   foo 
[(2, 4), (2, 11)]   bar 
[(3, 6), (3, 13)]   baz 
[(4, 6), (4, 11)]   a 
[(5, 2), (5, 7)]   b "
`;
